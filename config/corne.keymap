/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define CM   1
#define LOWER   2
#define RAISE   3
#define ML   4

/ {
 behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
	td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
	td1: tap_dance_1 {
            compatible  = "zmk,behavior-tap-dance";
	    label = "TAP_DANCE_1"
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&kp TAB>, <&kp ESC>;
        };
    };
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
 &td1        &kp Q   &kp W       &kp E        &kp R      &kp T    &kp Y      &kp U      &kp I       &kp O    &kp P     &kp BSPC
 &kp LCTRL   &kp A   &hm LSHFT S &hm LALT D   &hm LGUI F &kp G    &kp H      &kp J      &kp K       &kp L    &kp SEMI  &kp SQT
 &kp LSHFT   &kp Z   &kp X       &kp C        &kp V      &kp B    &kp N      &kp M      &kp COMMA   &kp DOT  &kp FSLH  &kp RSHFT
                            &kp LGUI  &mo 2  &kp SPACE  &kp RET  &mo 3   &kp RALT
            >;
        };

        colemak_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  ;  | BKSP |
            // | CTRL |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |  '   |
            // | SHFT |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | SHFT |
            //                    | GUI |     | SPC |   | ENT |      | ALT |

            bindings = <
   &kp TAB   &kp Q   &kp W     &kp F   &kp P      &kp B    &kp J   &kp L      &kp U    &kp Y  &kp SEMI   &kp BSPC
 &kp LCTRL   &kp A   &kp R     &kp S   &kp T      &kp G    &kp M   &kp N      &kp E    &kp I     &kp O    &kp SQT
 &kp LSHFT   &kp Z   &kp X     &kp C   &kp D      &kp V    &kp K   &kp H  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                            &kp LGUI   &mo 2  &kp SPACE  &kp RET   &mo 3   &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // |      |     |     |     |     |     |   | LFT | DWN |  UP | RGT |  [  |   ]  |
            // | SHFT |     |     |     |     |     |   |     |  -  |  =  |  \  |  `  | SHFT |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
   &td1  &kp N1  &kp N2    &kp N3             &kp N4                 &kp N5    &kp N6     &kp N7     &kp N8     &kp N9     &kp N0   &kp BSPC
    &trans  &trans  &trans    &trans   &kp LEFT_BRACKET   &kp LEFT_PARENTHESIS  &kp LEFT   &kp DOWN     &kp UP  &kp RIGHT     &trans     &trans
 &kp LSHFT  &trans  &trans    &trans  &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS    &trans  &kp MINUS  &kp EQUAL   &kp BSLH  &kp GRAVE  &kp RSHFT
                            &kp LGUI             &trans              &kp SPACE   &kp RET     &trans   &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // | ESC |  F2 |  F3  |  F4 |  F5 |  F6 |   | F7  |  F8 |  F9 | F10 | F11 | F12 | 
            // | F1  |     |      | DEL | HOME| END |   | PRT |     |     |     |     |     |
            // | SHFT |     |     |     | Vdwn|V_up |   |     |     |     |     |     |     |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
 &kp ESC  &kp F2  &kp F3      &kp F4        &kp F5        &kp F6     &kp F7  &kp F8    &kp F9  &kp F10  &kp F11  &kp F12
  &kp F2  &trans  &trans     &kp DEL      &kp HOME       &kp END  &kp PSCRN  &trans    &trans   &trans   &trans   &trans
  &kp F1  &trans  &trans  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP     &trans  &trans    &trans   &trans   &trans   &trans
                            &kp LGUI        &trans     &kp SPACE    &kp RET  &trans  &kp RALT
            >;
        };

        misc_layer {
            // -----------------------------------------------------------------------------------------
            // | BTCLR |  BT1  |  BT2  | BT3   |       |   |     |     |     |     |     |       |  CM  |
            // |       |       |       |       | RGBEF |   |     |     |     |     |     |       |      |
            // | RGBBU | RGBBD | RGBHU | RGBHD | RGBT  |   |     |     |     |     |     |       |  QW  |
            //                  |       |     |     |   |     |     |     |

            bindings = <
      &bt BT_CLR     &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2           &trans  &trans  &trans  &trans  &trans  &trans  &trans   &to 1
          &trans           &trans           &trans           &trans  &rgb_ug RGB_EFF  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_HUI  &rgb_ug RGB_HUI  &rgb_ug RGB_TOG  &trans  &trans  &trans  &trans  &trans  &trans   &to 0
                                                             &trans           &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
