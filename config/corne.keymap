/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define CM   1
#define NOMOd 2
#define LOWER  3 
#define RAISE   4
#define ML   5


 
// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
 behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
	td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
	td1: tap_dance_1 {
            compatible  = "zmk,behavior-tap-dance";
	    label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SQT>, <&kp SEMI>;
        };
	td0: tap_dance_0 {
            compatible  = "zmk,behavior-tap-dance";
	    label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RA(TAB)>, <&kp RC(RA(TAB))>;
        };
    };
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <3 4>;
            then-layer = <5>;
        };
    };

    macros {
        win_sleep: win_sleep {
            label = "win_sleep";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LG(X) &kp U &kp S>;
               
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
	    label = "QWERTY";
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
 &trans   &kp Q         &kp W       &kp E        &kp R      &kp T      &kp Y      &kp U      &kp I       &kp O       &kp P          &trans
 &trans   &hm LCTRL A   &hm LSHFT S &hm LALT D   &hm LGUI F &kp G      &kp H      &hm RGUI J &hm RALT K  &hm RSHFT L &td1           &trans
 &trans   &kp Z         &kp X       &kp C        &kp V      &kp B      &kp N      &kp M      &kp COMMA   &kp DOT     &hm RCTRL FSLH &trans
                                    &trans       &lt 3 TA  &kp SPACE  &kp RET    &lt 4 BKSP &trans
            >;
        };

        colemak_layer {
            label = "Colemak";
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  ;  | BKSP |
            // | CTRL |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |  '   |
            // | SHFT |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | SHFT |
            //                    | GUI |     | SPC |   | ENT |      | ALT |

            bindings = <
 &trans   &kp Q   &kp W     &kp F   &kp P      &kp B      &kp J      &kp L      &kp U      &kp Y    &td1           &trans
 &trans   &kp A   &kp R     &kp S   &kp T      &kp G      &kp M      &kp N      &kp E      &kp I    &kp O          &trans
 &trans   &kp Z   &kp X     &kp C   &kp D      &kp V      &kp K      &kp H      &kp COMMA  &kp DOT  &hm RCTRL FSLH &trans
                                    &trans     &lt 3 TAB  &kp SPACE  &kp RET    &lt 4 BKSP &trans
            >;
        };
		default_without {
	    label = "Game";
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
 &trans   &kp Q         &kp W       &kp E        &kp R      &kp T      &kp Y      &kp U      &kp I       &kp O       &kp P          &trans
 &trans   &kp A         &kp S       &kp D        &kp F      &kp G      &kp H      &hm RGUI J &hm RALT K  &hm RSHFT L &td1           &trans
 &trans   &kp Z         &kp X       &kp C        &kp V      &kp B      &kp N      &kp M      &kp COMMA   &kp DOT     &hm RCTRL FSLH &trans
                                    &trans       &lt 3 TAB  &kp SPACE  &kp RET    &lt 4 BKSP &trans
            >;
        };

        lower_layer {
	    label = "Num/Nav";
            // -----------------------------------------------------------------------------------------
            // |   `  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // |      |     |     |     |     |     |   | LFT | DWN |  UP | RGT |  _  |   +  |
            // | SHFT |     |     |     |     |     |   |     |  -  |  =  |     |  \  | SHFT |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
 &trans    &kp N1     &kp N2          &kp N3  	         &kp N4             &kp N5                &kp N6     &kp N7     &kp N8     &kp N9       &kp N0     &trans
 &trans    &kp GRAVE  &trans          &kp LEFT_BRACKET   &kp LEFT_BRACE     &kp LEFT_PARENTHESIS  &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT    &kp UNDER  &trans
 &trans    &trans     &trans          &kp RIGHT_BRACKET  &kp RIGHT_BRACE    &kp RIGHT_PARENTHESIS &td0       &kp MINUS  &kp EQUAL  &trans       &kp BSLH   &trans
                                         &trans             &trans          &trans                &kp ESC    &trans     &trans
            >;
        };

        raise_layer {
	    label = "Func";
            // -----------------------------------------------------------------------------------------
            // | ESC |  F2 |  F3  |  F4 |  F5 |  F6 |   | F7  |  F8 |  F9 | F10 | F11 | F12 | 
            // | F1  |     |      | DEL | HOME| END |   | PRT |     |     |     |     |     |
            // | SHFT |     |     |     | Vdwn|V_up |   |     |     |     |     |     | slp |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &trans  &kp F2  &kp F3     &kp F4       &kp F5         &kp F6        &kp F7     &kp F8    &kp F9    &kp F10  &kp F11  &trans
  &trans  &trans  &kp PSCRN  &kp DEL      &trans         &trans        &kp HOME   &kp PG_DN &kp PG_UP &kp END  &kp F12  &trans
  &trans  &trans  &trans     &kp C_MUTE   &kp C_VOL_DN   &kp C_VOL_UP  &trans     &trans    &trans    &trans   &trans   &trans
                             &trans       &trans           &trans        &trans     &trans    &trans
            >;
        };
	
        misc_layer {
	    label = "Misc";
            // -----------------------------------------------------------------------------------------
            // | BTCLR |  BT1  |  BT2  | BT3   |       |   |     |     |     |     |     |       |  CM  |
            // |       |       |       |       | RGBEF |   |     |     |     |     |     |       |      |
            // | RGBBU | RGBBD | RGBHU | RGBHD |       |   |     |     |     |     |     |       |  QW  |
            //                  |       |     |     |   |     |     |     |

            bindings = <
      &trans   &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &trans               &trans           &trans &trans  &trans  &trans  &to 1   &trans
      &trans   &bt BT_CLR       &trans           &trans           &trans               &trans           &trans &trans  &trans  &trans  &to 2   &trans
      &trans   &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_HUI  &rgb_ug RGB_HUD      &rgb_ug RGB_EFF  &trans &trans  &trans  &trans  &to 0   &trans
                                          &trans        &trans   &trans      &trans  &trans  &trans
            >;
        };

    };
};
